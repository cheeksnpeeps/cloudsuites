logging:
  level:
    com.cloudsuites: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.flywaydb: DEBUG
    org.springframework.jdbc: DEBUG
  pattern:
    console: "%-4relative [%thread] %-5level %logger{35} %X{correlationId} - %msg %n"

spring:
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password:
  flyway:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    user: sa
    password:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    placeholders:
      partitioning.prefix: "amenity_booking_" # Prefix used for partition table names
      partitioning.frequency: "4" # Frequency of partitioning (e.g., number of quarters per year)
      partitioning.retention_period_months: "3"  # Retention period for active data (in months)
      partitioning.archive_storage_path: "/Users/loc/Desktop/storage" # Path for storing archived data
      archiving.cut_off_period_months: "6" # Cut-off period for archiving (in months)
      archiving.file_format: ".parquet" # File format for archived data
  jpa:
    properties:
      hibernate.dialect: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
  sql:
    init:
      mode: always
  websecurity:
    debug: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://cheeksnpeeps.auth0.com/

auth0:
  audience: https://api.cloudsuites.com

web:
  cors:
    allowed-origins: http://localhost:8080
  web:
    resources:
      static-locations: classpath:/static/

okta:
  oauth2:
    groupsClaim: https://api.cloudsuites.com/roles

management:
  endpoints:
    web:
      exposure:
        include: info,health,metrics,env,beans,auditevents,loggers,configprops,threaddump,heapdump,dependencies
      base-path: /actuator
  endpoint:
    health:
      show-details: always
    loggers:
      enabled: true
twilio:
  accountSid: ${accountSid}
  serviceSid: ${serviceSid}
  authToken: ${authToken}
  phoneNumber: ${phoneNumber}
jwt:
  secretKey: ${secretKey}
  accessTokenValidityMs: 86400000  # 1 day in milliseconds
  refreshTokenValidityMs: 604800000  # 7 days in milliseconds
gcp:
  firebase:
    service-account: classpath:firebase-service-account.json

