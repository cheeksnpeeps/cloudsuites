name: CloudSuites CI/CD Pipeline

on:
  push:
    branches: [ main, develop, 'feat/**' ]
  pull_request:
    branches: [ main, develop ]

# Disable GitHub dependency graph auto-submission to prevent conflicts
permissions:
  contents: read

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java-version: [21]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # Ensure complete checkout to avoid missing files
        fetch-depth: 0
        
    - name: Verify Maven wrapper and settings
      run: |
        echo "=== Verifying Maven wrapper existence ==="
        echo "Current working directory: $(pwd)"
        echo "Full working directory path: $(readlink -f .)"
        if [ ! -f ./mvnw ]; then
          echo "ERROR: Maven wrapper not found!"
          echo "Contents of current directory:"
          ls -la
          exit 1
        fi
        echo "Maven wrapper found ✓"
        
        echo "=== Verifying .mvn/settings.xml ==="
        if [ ! -f .mvn/settings.xml ]; then
          echo "ERROR: Maven settings file not found!"
          echo "Contents of .mvn directory:"
          ls -la .mvn/ || echo ".mvn directory does not exist"
          echo "Contents of current directory:"
          ls -la
          exit 1
        fi
        echo "Maven settings file found ✓"
        
        echo "=== Full path information ==="
        echo "Maven wrapper path: $(readlink -f ./mvnw)"
        echo "Settings file path: $(readlink -f .mvn/settings.xml)"
        
        echo "=== Current working directory ==="
        pwd
        echo "=== Directory contents ==="
        ls -la
        echo "=== .mvn directory contents ==="
        ls -la .mvn/
      
    - name: Make Maven wrapper executable
      run: chmod +x ./mvnw
      
    - name: Test Maven wrapper execution
      run: |
        echo "=== Testing Maven wrapper execution ==="
        ./mvnw --version
        echo "Maven wrapper execution successful ✓"
        echo "=== Testing settings file access ==="
        SETTINGS_PATH="$(pwd)/.mvn/settings.xml"
        echo "Full settings path: $SETTINGS_PATH"
        if [ -f "$SETTINGS_PATH" ]; then
          echo "Settings file accessible ✓"
          ./mvnw -s "$SETTINGS_PATH" help:effective-settings | head -10
        else
          echo "ERROR: Settings file not accessible at $SETTINGS_PATH"
          exit 1
        fi
      
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Debug working directory and files
      run: |
        pwd
        ls -la
        ls -la .mvn/
        cat .mvn/settings.xml | head -5
        echo "=== Full path verification ==="
        echo "Working directory: $(pwd)"
        echo "Settings file full path: $(readlink -f .mvn/settings.xml)"
        echo "Maven wrapper full path: $(readlink -f ./mvnw)"
        
    - name: Validate Maven project structure
      run: |
        echo "=== Maven validation with full path debugging ==="
        echo "Current directory: $(pwd)"
        echo "Settings file exists: $(test -f .mvn/settings.xml && echo 'YES' || echo 'NO')"
        echo "Maven wrapper exists: $(test -f ./mvnw && echo 'YES' || echo 'NO')"
        echo "Attempting Maven validation..."
        SETTINGS_PATH="$(pwd)/.mvn/settings.xml"
        echo "Using settings file: $SETTINGS_PATH"
        ./mvnw -s "$SETTINGS_PATH" validate -Dfrontend.skip=true
      
    - name: Compile project (skip frontend for now)
      run: |
        SETTINGS_PATH="$(pwd)/.mvn/settings.xml"
        ./mvnw -s "$SETTINGS_PATH" compile -Dfrontend.skip=true
      
    - name: Run unit tests
      run: |
        SETTINGS_PATH="$(pwd)/.mvn/settings.xml"
        ./mvnw -s "$SETTINGS_PATH" test -Dfrontend.skip=true
      
    - name: Run integration tests
      run: |
        SETTINGS_PATH="$(pwd)/.mvn/settings.xml"
        ./mvnw -s "$SETTINGS_PATH" verify -P integration-tests -DskipTests=false -Dfrontend.skip=true
      continue-on-error: true
      
    - name: Generate test reports
      run: |
        SETTINGS_PATH="$(pwd)/.mvn/settings.xml"
        ./mvnw -s "$SETTINGS_PATH" jacoco:report -Dfrontend.skip=true
      if: always()
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-java-${{ matrix.java-version }}
        path: |
          **/target/surefire-reports/
          **/target/failsafe-reports/
          **/target/site/jacoco/
          
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Verify Maven wrapper and settings
      run: |
        echo "=== Verifying Maven wrapper existence ==="
        if [ ! -f ./mvnw ]; then
          echo "ERROR: Maven wrapper not found!"
          exit 1
        fi
        echo "Maven wrapper found ✓"
        
        echo "=== Verifying .mvn/settings.xml ==="
        if [ ! -f .mvn/settings.xml ]; then
          echo "ERROR: Maven settings file not found!"
          exit 1
        fi
        echo "Maven settings file found ✓"
      
    - name: Make Maven wrapper executable
      run: chmod +x ./mvnw
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Debug working directory and files
      run: |
        pwd
        ls -la
        ls -la .mvn/
        
    - name: Run OWASP Dependency Check
      run: |
        SETTINGS_PATH="$(pwd)/.mvn/settings.xml"
        echo "Using settings file: $SETTINGS_PATH"
        ./mvnw -s "$SETTINGS_PATH" org.owasp:dependency-check-maven:check
      
    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-scan-results
        path: target/dependency-check-report.html

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Verify Maven wrapper and settings
      run: |
        echo "=== Verifying Maven wrapper existence ==="
        if [ ! -f ./mvnw ]; then
          echo "ERROR: Maven wrapper not found!"
          exit 1
        fi
        echo "Maven wrapper found ✓"
        
        echo "=== Verifying .mvn/settings.xml ==="
        if [ ! -f .mvn/settings.xml ]; then
          echo "ERROR: Maven settings file not found!"
          exit 1
        fi
        echo "Maven settings file found ✓"
      
    - name: Make Maven wrapper executable
      run: chmod +x ./mvnw
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Build application
      run: |
        SETTINGS_PATH="$(pwd)/.mvn/settings.xml"
        echo "Using settings file: $SETTINGS_PATH"
        ./mvnw -s "$SETTINGS_PATH" clean package -DskipTests -Dfrontend.skip=true
      
    - name: Build Docker image
      run: docker build -t cloudsuites:${{ github.sha }} .
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: application-jar
        path: |
          **/target/*.jar
          !**/target/*-sources.jar
          !**/target/*-javadoc.jar

  authentication-tests:
    name: Authentication Feature Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Verify Maven wrapper and settings
      run: |
        echo "=== Verifying Maven wrapper existence ==="
        if [ ! -f ./mvnw ]; then
          echo "ERROR: Maven wrapper not found!"
          exit 1
        fi
        echo "Maven wrapper found ✓"
        
        echo "=== Verifying .mvn/settings.xml ==="
        if [ ! -f .mvn/settings.xml ]; then
          echo "ERROR: Maven settings file not found!"
          exit 1
        fi
        echo "Maven settings file found ✓"
      
    - name: Make Maven wrapper executable
      run: chmod +x ./mvnw
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Run JWT Tests
      run: |
        SETTINGS_PATH="$(pwd)/.mvn/settings.xml"
        ./mvnw -s "$SETTINGS_PATH" test -f modules/identity-module -Dtest=Jwt*Test
      
    - name: Run Authentication Integration Tests
      run: |
        SETTINGS_PATH="$(pwd)/.mvn/settings.xml"
        ./mvnw -s "$SETTINGS_PATH" test -f modules/identity-module -Dtest=*IntegrationTest
      
    - name: Validate Test Coverage (85% minimum)
      run: |
        SETTINGS_PATH="$(pwd)/.mvn/settings.xml"
        ./mvnw -s "$SETTINGS_PATH" jacoco:report -f modules/identity-module
        ./mvnw -s "$SETTINGS_PATH" jacoco:check -f modules/identity-module -Djacoco.haltOnFailure=true
