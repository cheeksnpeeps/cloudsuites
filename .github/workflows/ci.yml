name: CloudSuites CI/CD Pipeline

on:
  push:
    branches: [ main, develop, 'feat/**' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java-version: [21]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Make Maven wrapper executable
      run: chmod +x ./mvnw
      
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Validate Maven project structure
      run: ./mvnw -s .mvn/settings.xml validate -Dfrontend.skip=true
      
    - name: Compile project (skip frontend for now)
      run: ./mvnw -s .mvn/settings.xml compile -Dfrontend.skip=true
      
    - name: Run unit tests
      run: ./mvnw -s .mvn/settings.xml test -Dfrontend.skip=true
      
    - name: Run integration tests
      run: ./mvnw -s .mvn/settings.xml verify -P integration-tests -DskipTests=false -Dfrontend.skip=true
      continue-on-error: true
      
    - name: Generate test reports
      run: ./mvnw -s .mvn/settings.xml jacoco:report -Dfrontend.skip=true
      if: always()
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-java-${{ matrix.java-version }}
        path: |
          **/target/surefire-reports/
          **/target/failsafe-reports/
          **/target/site/jacoco/
          
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Make Maven wrapper executable
      run: chmod +x ./mvnw
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Run OWASP Dependency Check
      run: ./mvnw -s .mvn/settings.xml org.owasp:dependency-check-maven:check
      
    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-scan-results
        path: target/dependency-check-report.html

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Make Maven wrapper executable
      run: chmod +x ./mvnw
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Build application
      run: ./mvnw -s .mvn/settings.xml clean package -DskipTests -Dfrontend.skip=true
      
    - name: Build Docker image
      run: docker build -t cloudsuites:${{ github.sha }} .
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: application-jar
        path: |
          **/target/*.jar
          !**/target/*-sources.jar
          !**/target/*-javadoc.jar

  authentication-tests:
    name: Authentication Feature Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Make Maven wrapper executable
      run: chmod +x ./mvnw
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Run JWT Tests
      run: ./mvnw -s .mvn/settings.xml test -f modules/identity-module -Dtest=Jwt*Test
      
    - name: Run Authentication Integration Tests
      run: ./mvnw -s .mvn/settings.xml test -f modules/identity-module -Dtest=*IntegrationTest
      
    - name: Validate Test Coverage (85% minimum)
      run: |
        ./mvnw -s .mvn/settings.xml jacoco:report -f modules/identity-module
        ./mvnw -s .mvn/settings.xml jacoco:check -f modules/identity-module -Djacoco.haltOnFailure=true
