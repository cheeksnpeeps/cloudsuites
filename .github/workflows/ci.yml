name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  actions: none

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java-version: [21]
    
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: cloudsuites_dev
          POSTGRES_USER: cloudsuites_user
          POSTGRES_DB: cloudsuites_dev
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Verify Maven wrapper and settings
      run: |
        echo "=== Verifying Maven wrapper existence ==="
        if [ ! -f ./mvnw ]; then
          echo "ERROR: Maven wrapper not found!"
          ls -la
          exit 1
        fi
        echo "Maven wrapper found ✓"
        
        echo "=== Verifying Maven settings ==="
        if [ ! -f .mvn/settings.xml ]; then
          echo "ERROR: Maven settings file not found!"
          ls -la .mvn/
          exit 1
        fi
        echo "Maven settings file found ✓"
        
    - name: Make Maven wrapper executable
      run: chmod +x ./mvnw
      
    - name: Test Maven wrapper
      run: ./mvnw --version
      
    - name: Compile project
      run: ./mvnw -s .mvn/settings.xml compile
      
    - name: Run tests
      run: ./mvnw -s .mvn/settings.xml test
      
    - name: Package application  
      run: ./mvnw -s .mvn/settings.xml package -DskipTests

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.java-version }}
        path: |
          **/target/surefire-reports/
          **/target/failsafe-reports/
        retention-days: 30
        
    - name: Upload JAR artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: jar-artifacts-${{ matrix.java-version }}
        path: |
          **/target/*.jar
          !**/target/*-sources.jar
          !**/target/*-javadoc.jar
        retention-days: 30
